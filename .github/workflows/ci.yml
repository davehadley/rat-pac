name: ci

env:
  BUILD_TYPE: Release

on: 
  push:
    branches: [master, feat-github-ci]
  pull_request:
    branches: [master, feat-github-ci]

jobs:
  build-linux:
    runs-on: ubuntu-20.04
    strategy:
      max-parallel: 5
    timeout-minutes: 600
    steps:
    - uses: actions/checkout@v2
    - name: Install Dependencies
      run: |
        git clone https://github.com/spack/spack.git
        . $GITHUB_WORKSPACE/spack/share/spack/setup-env.sh
        spack env create env
        spack env activate env
        spack install --cache-only root@6.18.04
        spack install --cache-only geant4@10.4.3 

    # - name: Get Dependencies
    #   shell: bash
    #   # see https://geant4.web.cern.ch/node/1604
    #   run: |
    #     # ROOT 6
    #     wget https://root.cern/download/root_v6.18.04.Linux-ubuntu18-x86_64-gcc7.4.tar.gz
    #     tar -xf root_v6.18.04.Linux-ubuntu18-x86_64-gcc7.4.tar.gz
    #     # GEANT4
    #     wget https://geant4-data.web.cern.ch/releases/lib4.10.4.p03/Linux-g++4.8.5-CC7.tar.gz
    #     tar -xf Linux-g++4.8.5-CC7.tar.gz

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: |
        . $GITHUB_WORKSPACE/spack/share/spack/setup-env.sh
        spack env activate env
        cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: |
        . $GITHUB_WORKSPACE/spack/share/spack/setup-env.sh
        spack env activate env
        cmake --build . --config $BUILD_TYPE

    - name: Test
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: ctest -C $BUILD_TYPE
