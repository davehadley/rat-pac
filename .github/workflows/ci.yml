name: ci

env:
  BUILD_TYPE: Release

on: 
  push:
    branches: [master, feat-github-ci]
  pull_request:
    branches: [master, feat-github-ci]

jobs:
  build-linux:
    runs-on: ubuntu-20.04
    strategy:
      max-parallel: 5
    timeout-minutes: 600
    steps:
    - uses: actions/checkout@v2
    # - name: Get ROOT
    #   shell: bash
    #   run: |
    #     # ROOT 6
    #     wget https://root.cern/download/root_v6.18.04.Linux-ubuntu18-x86_64-gcc7.4.tar.gz
    #     tar -xf root_v6.18.04.Linux-ubuntu18-x86_64-gcc7.4.tar.gz

    # - name: Build GEANT4
    #     shell: bash
    #     run: |
    #       # sudo apt-get install libexpat1-dev
    #       # sudo apt-get install dpkg-dev cmake g++ gcc binutils libx11-dev libxpm-dev libxft-dev libxext-dev libssl-dev
    #       # sudo apt-get install -y libtinfo5
    #       # GEANT4
    #       wget https://geant4-data.web.cern.ch/releases/geant4.10.06.p03.tar.gz
    #       tar -xf Linux-g++4.8.5-CC7.tar.gz
    - name: Install CVMFS
      shell: bash
      run: |
        wget https://ecsft.cern.ch/dist/cvmfs/cvmfs-release/cvmfs-release-latest_all.deb
        sudo dpkg -i cvmfs-release-latest_all.deb
        rm -f cvmfs-release-latest_all.deb
        sudo apt-get update
        sudo apt-get install cvmfs
        sudo cvmfs_config setup
        sudo sh -c "echo CVMFS_REPOSITORIES=sft.cern.ch > /etc/cvmfs/default.local"
        sudo sh -c "echo CVMFS_HTTP_PROXY=DIRECT >> /etc/cvmfs/default.local"
        sudo cvmfs_config probe

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      run: |
        source /cvmfs/sft.cern.ch/lcg/app/releases/ROOT/6.18.04/x86_64-ubuntu18-gcc74-opt/bin/thisroot.sh
        ls /cvmfs/sft.cern.ch/lcg/app/releases/
        find /cvmfs/sft.cern.ch/lcg/app/releases -name geant4.sh
        source /cvmfs/sft.cern.ch/lcg/app/releases/geant4/4.10.04/x86_64-ubuntu18-gcc74-opt/bin/geant4.sh
        cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE 

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: |
        cmake --build . --config $BUILD_TYPE

    - name: Test
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: ctest -C $BUILD_TYPE
